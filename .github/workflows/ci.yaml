name: Django CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set environment variables
      run: echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV

    - name: Run migrations
      env:
        TEST_ENV: true
      run: python manage.py migrate

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Debug SSH key
        run: |
          ssh-add -l

      - name: Copy project files to server
        run: |
          echo "Listing files in GitHub Actions runner before rsync:"
          ls -la
          echo "${{ secrets.SSH_KEY }}" > ssh_key
          chmod 600 ssh_key
          ssh -i ssh_key -o StrictHostKeyChecking=no -v ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "echo SSH connection test successful"
          rsync -avzr -e "ssh -i ssh_key -o StrictHostKeyChecking=no" --exclude '__pycache__' --exclude '.git' --exclude '.gitignore' --exclude '.env.sample' ./ ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_DIR }}
          ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            echo "Starting SSH script execution"
            echo "After rsync, listing contents of ${{ secrets.DEPLOY_DIR }}:"
            ls -la ${{ secrets.DEPLOY_DIR }}
            ls -la ${{ secrets.DEPLOY_DIR }}/config 2>/dev/null || echo "config directory not found"
            echo "Checking Docker and Compose versions:"
            docker --version
            docker compose version
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > ${{ secrets.DEPLOY_DIR }}/.env
            echo "DATABASE_URL=postgres://postgres:password@db:5432/mydb" >> ${{ secrets.DEPLOY_DIR }}/.env
            echo "REDIS_URL=redis://redis:6379/0" >> ${{ secrets.DEPLOY_DIR }}/.env
            echo "DEBUG=False" >> ${{ secrets.DEPLOY_DIR }}/.env
            cd ${{ secrets.DEPLOY_DIR }}
            echo "Validating docker-compose.yml:"
            docker compose config
            docker compose down
            docker compose pull
            docker compose up -d --build
            echo "Docker containers status:"
            docker compose ps
            docker compose logs
          EOF